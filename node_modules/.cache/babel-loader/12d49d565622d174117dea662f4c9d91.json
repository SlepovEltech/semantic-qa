{"remainingRequest":"/Users/artemslepov/GitHub/semantic-qa/node_modules/thread-loader/dist/cjs.js!/Users/artemslepov/GitHub/semantic-qa/node_modules/babel-loader/lib/index.js!/Users/artemslepov/GitHub/semantic-qa/node_modules/eslint-loader/index.js??ref--13-0!/Users/artemslepov/GitHub/semantic-qa/src/services/SearchService.js","dependencies":[{"path":"/Users/artemslepov/GitHub/semantic-qa/src/services/SearchService.js","mtime":1645393891359},{"path":"/Users/artemslepov/GitHub/semantic-qa/node_modules/cache-loader/dist/cjs.js","mtime":1645393885238},{"path":"/Users/artemslepov/GitHub/semantic-qa/node_modules/thread-loader/dist/cjs.js","mtime":1645393890771},{"path":"/Users/artemslepov/GitHub/semantic-qa/node_modules/babel-loader/lib/index.js","mtime":1645393885007},{"path":"/Users/artemslepov/GitHub/semantic-qa/node_modules/eslint-loader/index.js","mtime":1645393886884}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvYXJ0ZW1zbGVwb3YvR2l0SHViL3NlbWFudGljLXFhL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2FydGVtc2xlcG92L0dpdEh1Yi9zZW1hbnRpYy1xYS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgaHR0cCBmcm9tICIuLi9odHRwLWNvbW1vbiI7Cgp2YXIgU2VhcmNoU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gU2VhcmNoU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZWFyY2hTZXJ2aWNlKTsKICB9CgogIF9jcmVhdGVDbGFzcyhTZWFyY2hTZXJ2aWNlLCBbewogICAga2V5OiAic2VhcmNoQW5zd2VyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZWFyY2hBbnN3ZXIocXVlcnkpIHsKICAgICAgcmV0dXJuIGh0dHAuZ2V0KCIvP3F1ZXJ5PSIuY29uY2F0KHF1ZXJ5KSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0RW50aXR5IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRFbnRpdHkoc3Vic3RyaW5nKSB7CiAgICAgIHJldHVybiBodHRwLmdldCgiL2F1dG9jb21wbGV0ZS9lbnRpdHk/c3Vic3RyPSIuY29uY2F0KHN1YnN0cmluZykpOwogICAgfQogIH0sIHsKICAgIGtleTogImV4ZWN1dGVDb25zdHJ1Y3RvciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZXhlY3V0ZUNvbnN0cnVjdG9yKGRhdGEpIHsKICAgICAgcmV0dXJuIGh0dHAucG9zdCgiLyIsIGRhdGEpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFNlYXJjaFNlcnZpY2U7Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IG5ldyBTZWFyY2hTZXJ2aWNlKCk7"},{"version":3,"sources":["/Users/artemslepov/GitHub/semantic-qa/src/services/SearchService.js"],"names":["http","SearchService","query","get","substring","data","post"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;IAEMC,a;;;;;;;WACJ,sBAAaC,KAAb,EAAoB;AAClB,aAAOF,IAAI,CAACG,GAAL,mBAAoBD,KAApB,EAAP;AACD;;;WAED,mBAAUE,SAAV,EAAoB;AAClB,aAAOJ,IAAI,CAACG,GAAL,uCAAwCC,SAAxC,EAAP;AACD;;;WAED,4BAAmBC,IAAnB,EAAyB;AACvB,aAAOL,IAAI,CAACM,IAAL,CAAU,GAAV,EAAeD,IAAf,CAAP;AACD;;;;;;AAGH,eAAe,IAAIJ,aAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass SearchService {\n  searchAnswer(query) {\n    return http.get(`/?query=${query}`);\n  }\n\n  getEntity(substring){\n    return http.get(`/autocomplete/entity?substr=${substring}`);\n  }\n\n  executeConstructor(data) {\n    return http.post(\"/\", data);\n  }\n}\n\nexport default new SearchService();\n"]}]}