{"remainingRequest":"/home/artem/Documents/semantic-qa/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/artem/Documents/semantic-qa/src/components/Constructor.vue?vue&type=style&index=0&id=7d890d88&lang=css","dependencies":[{"path":"/home/artem/Documents/semantic-qa/src/components/Constructor.vue","mtime":1650623635896},{"path":"/home/artem/Documents/semantic-qa/node_modules/css-loader/dist/cjs.js","mtime":1650786541788},{"path":"/home/artem/Documents/semantic-qa/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1650786542792},{"path":"/home/artem/Documents/semantic-qa/node_modules/postcss-loader/src/index.js","mtime":1650786542044},{"path":"/home/artem/Documents/semantic-qa/node_modules/cache-loader/dist/cjs.js","mtime":1650786541456},{"path":"/home/artem/Documents/semantic-qa/node_modules/vue-loader-v16/dist/index.js","mtime":1650786542360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5saXN0IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1heC13aWR0aDogNzUwcHg7CiAgbWFyZ2luOiBhdXRvOwp9Cg=="},{"version":3,"sources":["/home/artem/Documents/semantic-qa/src/components/Constructor.vue"],"names":[],"mappings":";AAmHA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd","file":"/home/artem/Documents/semantic-qa/src/components/Constructor.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n\n      <div class=\"input-group mb-3\">\n        <h3 class=\"mr-3\">Извлечь</h3>\n         <input type=\"text\" class=\"form-control\" placeholder=\"Переменная\"\n               v-model=\"select_var_1\" />\n          <input type=\"text\" class=\"form-control\" placeholder=\"Переменная\"\n               v-model=\"select_var_2\" />\n          <input type=\"text\" class=\"form-control\" placeholder=\"Переменная\"\n               v-model=\"select_var_3\" />\n      </div>\n      <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Субъект\"\n               v-model=\"subject_1\" v-on:click=\"entityAutoComplete\"/>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Предикат\"\n               v-model=\"predicate_1\" v-on:click=\"predicateAutoComplete\"/>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Объект\"\n               v-model=\"object_1\" v-on:click=\"entityAutoComplete\"/>          \n      </div>\n      <div class=\"input-group mb-3\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Субъект\"\n               v-model=\"subject_2\" v-on:click=\"entityAutoComplete\"/>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Предикат\"\n               v-model=\"predicate_2\" v-on:click=\"predicateAutoComplete\"/>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Объект\"\n               v-model=\"object_2\" v-on:click=\"entityAutoComplete\"/>          \n      </div>\n\n       <div class=\"offset-md-5\">\n          <button class=\"btn btn-primary\" type=\"button\"\n            @click=\"executeQuery\"\n          >\n            Выполнить запрос\n          </button>\n        </div>\n    </div>\n\n   \n    <div class=\"col-md-12 card-columns\">\n      <h3>{{answer_error}}</h3>\n      <div class=\"card my-3\" v-for=\"(answer, index) in answers\" :key=\"index\">\n        <div v-for=\"(field, field_index) in answer\" :key=\"field_index\">\n              <h5>{{field_index}}</h5> <a :href=field.value>{{ field.value }}</a>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport SearchService from \"../services/SearchService\"\n\nexport default {\n  name: \"constructor\",\n  \n  data() {\n    return {\n      answers: [],\n      selectFields: [],\n      currentAnswer: null,\n      currentIndex: -1,\n      query:null,\n      answer_error:null,\n    };\n  },\n  methods: {\n    executeQuery() {\n      this.query = {\n        select_section : {\n          field_1 : this.select_var_1,\n          field_2 : this.select_var_2\n        },\n        body_section : {\n          triple_1 : {\n            subject :  this.subject_1,\n            predicate :  this.predicate_1,\n            object :  this.object_1 \n          },\n          triple_2 : {\n            subject :  this.subject_2,\n            predicate :  this.predicate_2,\n            object :  this.object_2 \n          }\n        }\n      };\n      console.log(this.query)\n      SearchService.executeConstructor(this.query)\n        .then(response => {\n          this.answers = response.data;\n          console.log(response.data);\n        })\n        .catch(e => {\n          this.answer_error = 'Произошла ошибка при составлении SPARQL запроса'\n          console.log(\"сосать+лежать\");\n          console.log(e);\n\n        });\n    },\n    clearSearchResults(){\n      this.answers = null;\n    },\n    \n  },\n  mounted() {\n    this.answers = null;\n  }\n};\n\n</script>\n\n<style>\n.list {\n  text-align: left;\n  max-width: 750px;\n  margin: auto;\n}\n</style>\n"]}]}