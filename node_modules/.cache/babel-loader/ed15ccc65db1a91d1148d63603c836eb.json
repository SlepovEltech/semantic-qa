{"remainingRequest":"/home/artem/Documents/semantic-qa/node_modules/thread-loader/dist/cjs.js!/home/artem/Documents/semantic-qa/node_modules/babel-loader/lib/index.js!/home/artem/Documents/semantic-qa/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/artem/Documents/semantic-qa/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/artem/Documents/semantic-qa/src/components/Autocomplete.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/artem/Documents/semantic-qa/src/components/Autocomplete.vue","mtime":1650821095121},{"path":"/home/artem/Documents/semantic-qa/babel.config.js","mtime":1647793556426},{"path":"/home/artem/Documents/semantic-qa/node_modules/cache-loader/dist/cjs.js","mtime":1650786541456},{"path":"/home/artem/Documents/semantic-qa/node_modules/thread-loader/dist/cjs.js","mtime":1650786541456},{"path":"/home/artem/Documents/semantic-qa/node_modules/babel-loader/lib/index.js","mtime":1650786542536},{"path":"/home/artem/Documents/semantic-qa/node_modules/cache-loader/dist/cjs.js","mtime":1650786541456},{"path":"/home/artem/Documents/semantic-qa/node_modules/vue-loader-v16/dist/index.js","mtime":1650786542360}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgVHJpcGxldCBmcm9tICIuLi9jb21wb25lbnRzL1RyaXBsZXQiOwppbXBvcnQgU2VhcmNoU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9TZWFyY2hTZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdhdXRvY29tcGxldGUnLAogIGNvbXBvbmVudHM6IHsKICAgIFRyaXBsZXQ6IFRyaXBsZXQKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VsZWN0X3ZhcmlhYmxlczogWyIiXSwKICAgICAgdHJpcGxldHNfYXJyYXk6IFsiIl0sCiAgICAgIHF1ZXJ5OiBudWxsLAogICAgICBhbnN3ZXJzOiBbXSwKICAgICAgYW5zd2VyX2Vycm9yOiBudWxsLAogICAgICB0YWJsZV9oZWFkZXI6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcHVzaFNlbGVjdEZpbGVkOiBmdW5jdGlvbiBwdXNoU2VsZWN0RmlsZWQoKSB7CiAgICAgIHRoaXMuc2VsZWN0X3ZhcmlhYmxlcy5wdXNoKCIiKTsKICAgIH0sCiAgICBwb3BTZWxlY3RGaWxlZDogZnVuY3Rpb24gcG9wU2VsZWN0RmlsZWQoKSB7CiAgICAgIGlmICh0aGlzLnNlbGVjdF92YXJpYWJsZXMubGVuZ3RoID4gMSkgdGhpcy5zZWxlY3RfdmFyaWFibGVzLnBvcCgpOwogICAgfSwKICAgIHB1c2hUcmlwbGV0OiBmdW5jdGlvbiBwdXNoVHJpcGxldCgpIHsKICAgICAgdGhpcy50cmlwbGV0c19hcnJheS5wdXNoKCIiKTsKICAgIH0sCiAgICBwb3BUcmlwbGV0OiBmdW5jdGlvbiBwb3BUcmlwbGV0KGlkeCkgewogICAgICBpZiAodGhpcy50cmlwbGV0c19hcnJheS5sZW5ndGggPiAxKSB0aGlzLnRyaXBsZXRzX2FycmF5LnNwbGljZShpZHgsIDEpOwogICAgfSwKICAgIHRyaXBsZXRJbnB1dDogZnVuY3Rpb24gdHJpcGxldElucHV0KGlkeCwgdHJpcGxldCkgewogICAgICB0aGlzLnRyaXBsZXRzX2FycmF5W2lkeF0gPSB0cmlwbGV0OwogICAgfSwKICAgIGV4ZWN1dGVRdWVyeTogZnVuY3Rpb24gZXhlY3V0ZVF1ZXJ5KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5hbnN3ZXJzID0gbnVsbDsKICAgICAgdGhpcy5hbnN3ZXJfZXJyb3IgPSBudWxsOwogICAgICB2YXIgc2VsZWN0X3NlY3Rpb24gPSB7fTsKICAgICAgdmFyIGJvZHlfc2VjdGlvbiA9IHt9OwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlbGVjdF92YXJpYWJsZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBzZWxlY3Rfc2VjdGlvblsnZmllbGRfJyArIChpICsgMSldID0gdGhpcy5zZWxlY3RfdmFyaWFibGVzW2ldOwogICAgICB9CgogICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgdGhpcy50cmlwbGV0c19hcnJheS5sZW5ndGg7IF9pKyspIHsKICAgICAgICBib2R5X3NlY3Rpb25bJ3RyaXBsZV8nICsgKF9pICsgMSldID0gdGhpcy50cmlwbGV0c19hcnJheVtfaV07CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKHNlbGVjdF9zZWN0aW9uKTsKICAgICAgY29uc29sZS5sb2coYm9keV9zZWN0aW9uKTsKICAgICAgdGhpcy5xdWVyeSA9IHsKICAgICAgICBzZWxlY3Rfc2VjdGlvbjogc2VsZWN0X3NlY3Rpb24sCiAgICAgICAgYm9keV9zZWN0aW9uOiBib2R5X3NlY3Rpb24KICAgICAgfTsKICAgICAgY29uc29sZS5sb2codGhpcy5xdWVyeSk7CiAgICAgIFNlYXJjaFNlcnZpY2UuZXhlY3V0ZUNvbnN0cnVjdG9yKHRoaXMucXVlcnkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMuYW5zd2VycyA9IHJlc3BvbnNlLmRhdGE7IC8vZm9yKGxldCBrZXkgb2YgcmVzcG9uc2UuZGF0YVswXS5rZXlzKQoKICAgICAgICBfdGhpcy50YWJsZV9oZWFkZXIgPSBPYmplY3Qua2V5cyhyZXNwb25zZS5kYXRhWzBdKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBfdGhpcy5hbnN3ZXJfZXJyb3IgPSAn0J/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsCDQv9GA0Lgg0YHQvtGB0YLQsNCy0LvQtdC90LjQuCBTUEFSUUwg0LfQsNC/0YDQvtGB0LAnOwogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;AAoDA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAGA,eAAe;AACdC,MAAI,EAAE,cADQ;AAEdC,YAAU,EAAE;AACXH,WAAO,EAAPA;AADW,GAFE;AAKdI,SALc,qBAKJ,CAET,CAPa;AAQdC,MARc,kBAQP;AACN,WAAO;AACNC,sBAAgB,EAAE,CAAC,EAAD,CADZ;AAENC,oBAAa,EAAI,CAAC,EAAD,CAFX;AAGNC,WAAK,EAAC,IAHA;AAINC,aAAO,EAAC,EAJF;AAKNC,kBAAY,EAAC,IALP;AAMNC,kBAAY,EAAE;AANR,KAAP;AAQA,GAjBa;AAkBdC,SAAO,EAAE;AACRC,mBADQ,6BACS;AAChB,WAAKP,gBAAL,CAAsBQ,IAAtB,CAA2B,EAA3B;AACA,KAHO;AAIRC,kBAJQ,4BAIQ;AACf,UAAG,KAAKT,gBAAL,CAAsBU,MAAtB,GAA+B,CAAlC,EACC,KAAKV,gBAAL,CAAsBW,GAAtB;AACD,KAPO;AAQRC,eARQ,yBAQK;AACZ,WAAKX,cAAL,CAAoBO,IAApB,CAAyB,EAAzB;AACA,KAVO;AAWRK,cAXQ,sBAWGC,GAXH,EAWO;AACd,UAAG,KAAKb,cAAL,CAAoBS,MAApB,GAA6B,CAAhC,EACC,KAAKT,cAAL,CAAoBc,MAApB,CAA2BD,GAA3B,EAAgC,CAAhC;AACD,KAdO;AAeRE,gBAfQ,wBAeKF,GAfL,EAeUG,OAfV,EAekB;AACzB,WAAKhB,cAAL,CAAoBa,GAApB,IAA2BG,OAA3B;AACA,KAjBO;AAkBRC,gBAlBQ,0BAkBO;AAAA;;AACd,WAAKf,OAAL,GAAe,IAAf;AACA,WAAKC,YAAL,GAAoB,IAApB;AACA,UAAIe,cAAa,GAAI,EAArB;AACA,UAAIC,YAAW,GAAI,EAAnB;;AACA,WAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAI,KAAKrB,gBAAL,CAAsBU,MAAzC,EAAiDW,CAAC,EAAlD,EAAqD;AACpDF,sBAAc,CAAC,YAAUE,CAAC,GAAC,CAAZ,CAAD,CAAd,GAAiC,KAAKrB,gBAAL,CAAsBqB,CAAtB,CAAjC;AACD;;AAEA,WAAI,IAAIA,KAAI,CAAZ,EAAeA,KAAI,KAAKpB,cAAL,CAAoBS,MAAvC,EAA+CW,EAAC,EAAhD,EAAmD;AAClDD,oBAAY,CAAC,aAAWC,EAAC,GAAC,CAAb,CAAD,CAAZ,GAAgC,KAAKpB,cAAL,CAAoBoB,EAApB,CAAhC;AACD;;AACAC,aAAO,CAACC,GAAR,CAAYJ,cAAZ;AACAG,aAAO,CAACC,GAAR,CAAYH,YAAZ;AAEA,WAAKlB,KAAL,GAAa;AACZiB,sBAAa,EAAIA,cADL;AAEZC,oBAAW,EAAIA;AAFH,OAAb;AAIAE,aAAO,CAACC,GAAR,CAAY,KAAKrB,KAAjB;AACAP,mBAAa,CAAC6B,kBAAd,CAAiC,KAAKtB,KAAtC,EACEuB,IADF,CACO,kBAAO,EAAK;AACjB,aAAI,CAACtB,OAAL,GAAeuB,QAAQ,CAAC3B,IAAxB,CADiB,CAGjB;;AACA,aAAI,CAACM,YAAL,GAAoBsB,MAAM,CAACC,IAAP,CAAYF,QAAQ,CAAC3B,IAAT,CAAc,CAAd,CAAZ,CAApB;AACAuB,eAAO,CAACC,GAAR,CAAYG,QAAQ,CAAC3B,IAArB;AACA,OAPF,EAQE8B,KARF,CAQQ,aAAK;AACX,aAAI,CAACzB,YAAL,GAAoB,iDAApB;AACAkB,eAAO,CAACC,GAAR,CAAYO,CAAZ;AACD,OAXD;AAYA;AAlDO;AAlBK,CAAf","names":["Triplet","SearchService","name","components","created","data","select_variables","triplets_array","query","answers","answer_error","table_header","methods","pushSelectFiled","push","popSelectFiled","length","pop","pushTriplet","popTriplet","idx","splice","tripletInput","triplet","executeQuery","select_section","body_section","i","console","log","executeConstructor","then","response","Object","keys","catch","e"],"sourceRoot":"","sources":["/home/artem/Documents/semantic-qa/src/components/Autocomplete.vue"],"sourcesContent":["<template>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-10 offset-md-1\">\n\t\t\t<div class=\"input-group mb-3\">\n\t\t\t\t<h3 class=\"mr-3\">Извлечь</h3>\t\n\t\t\t\t<input type=\"text\" v-for=\"(item, index) in select_variables\" :key=\"index\" v-model=\"select_variables[index]\" placeholder=\"Переменная\" class=\"form-control\">\n\t\t\t\t<button class=\"btn btn-outline-danger ml-1\" type=\"button\" @click=\"popSelectFiled\"> X </button>\n\t\t\t\t<button class=\"btn btn-outline-secondary ml-1\" type=\"button\" @click=\"pushSelectFiled\"> Добавить</button>\n\t\t\t</div>\n\n\n\t\t\t<div class=\"offset-md-3\">\n\t\t\t\t<Triplet v-for=\"(item, index) in triplets_array\" :key=\"index\" v-model=\"triplets_array[index]\" :variables=\"select_variables\" :idx=\"index\" @triple=\"tripletInput\" @popTriple=\"popTriplet\"/>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"offset-md-5\">\n\t\t\t\t<button class=\"btn btn-outline-secondary mt-1\" type=\"button\" @click=\"pushTriplet\"> Добавить триплет </button>\n\t\t\t</div>\n\n\t\t\t<div class=\"offset-md-5\">\n\t\t\t\t<button class=\"btn btn-primary mt-1\" type=\"button\" @click=\"executeQuery\" > Выполнить запрос </button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<h3 v-if=\"answer_error != null\" class=\"mt-1\">Ошибка: {{answer_error}}</h3>\n\t<div v-if=\"answers != null\">\n\t\t<h3 >Результаты запроса</h3>\n\t\t\n\t\t<table class=\"table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th v-for=\"(item, index) in table_header\" :key=\"index\" scope=\"col\">{{item}}</th>\t\t\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr v-for=\"(answer, index) in answers\" :key=\"index\">\n\t\t\t\t\t<td v-for=\"(field, field_index) in answer\" :key=\"field_index\">\n\t\t\t\t\t\t<a v-if=\"field.type=='uri'\" :href=field.value>{{ field.value }}</a>\n\t\t\t\t\t\t<h6 v-if=\"field.type=='literal'\">{{field.value}}</h6>\n\t\t\t\t\t</td>\n\t\t\t\t\t\t\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t</tbody>\n\t\t</table>\n\n\t</div>\n\t\t\n</template>\n\n<script>\nimport Triplet from \"../components/Triplet\"\nimport SearchService from \"../services/SearchService\"\n\n\nexport default {\n\tname: 'autocomplete',\n\tcomponents: {\n\t\tTriplet,\n\t},\n\tcreated() {\n\t\t\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tselect_variables: [\"\"],\n\t\t\ttriplets_array : [\"\"],\n\t\t\tquery:null,\n\t\t\tanswers:[],\n\t\t\tanswer_error:null,\n\t\t\ttable_header: []\n\t\t};\n\t},\n\tmethods: {\n\t\tpushSelectFiled(){\n\t\t\tthis.select_variables.push(\"\");\n\t\t},\n\t\tpopSelectFiled(){\n\t\t\tif(this.select_variables.length > 1)\n\t\t\t\tthis.select_variables.pop();\n\t\t},\n\t\tpushTriplet(){\n\t\t\tthis.triplets_array.push(\"\");\n\t\t},\n\t\tpopTriplet(idx){\n\t\t\tif(this.triplets_array.length > 1)\n\t\t\t\tthis.triplets_array.splice(idx, 1 );\n\t\t},\n\t\ttripletInput(idx, triplet){\n\t\t\tthis.triplets_array[idx] = triplet;\n\t\t},\n\t\texecuteQuery() {\n\t\t\tthis.answers = null;\n\t\t\tthis.answer_error = null;\n\t\t\tlet select_section = {};\n\t\t\tlet body_section = {};\n\t\t\tfor(let i = 0; i < this.select_variables.length; i++){\n\t\t\t\tselect_section['field_'+(i+1)] = this.select_variables[i];\n\t\t\t}\n\n\t\t\tfor(let i = 0; i < this.triplets_array.length; i++){\n\t\t\t\tbody_section['triple_'+(i+1)] = this.triplets_array[i];\n\t\t\t}\n\t\t\tconsole.log(select_section);\n\t\t\tconsole.log(body_section);\n\n\t\t\tthis.query = {\n\t\t\t\tselect_section : select_section,\n\t\t\t\tbody_section : body_section\n\t\t\t};\n\t\t\tconsole.log(this.query)\n\t\t\tSearchService.executeConstructor(this.query)\n\t\t\t\t.then(response => {\n\t\t\t\t\tthis.answers = response.data;\n\n\t\t\t\t\t//for(let key of response.data[0].keys)\n\t\t\t\t\tthis.table_header = Object.keys(response.data[0])\n\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tthis.answer_error = 'Произошла ошибка при составлении SPARQL запроса'\n\t\t\t\t\tconsole.log(e);\n\t\t\t});\n\t\t},\n\t},\n};\n</script>\n"]}]}